#!/usr/bin/env python

import sys

def decode_lsi_loginfo(val):
    t = (val >> 28) & 0xF
    origin = (val >> 24) & 0xF
    code = (val >> 16) & 0xFF
    spec = val & 0xFFFF
    return (t, origin, code, spec)

iop_code = {
0x00010000: ("IOP_LOGINFO_CODE_INVALID_SAS_ADDRESS", ""),
0x00020000: ("IOP_LOGINFO_CODE_UNUSED2", ""),
0x00030000: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE", ""),
0x00030100: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE_RT", "Route Table Entry not found"),
0x00030200: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE_PN", "Invalid Page Number"),
0x00030300: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE_FORM", "Invalid FORM"),
0x00030400: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE_PT", "Invalid Page Type"),
0x00030500: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE_DNM", "Device Not Mapped"),
0x00030600: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE_PERSIST", "Persistent Page not found"),
0x00030700: ("IOP_LOGINFO_CODE_CONFIG_INVALID_PAGE_DEFAULT", "Default Page not found"),
0x0003E000: ("IOP_LOGINFO_CODE_FWUPLOAD_NO_FLASH_AVAILABLE", "Tried to upload from flash, but there is none"),
0x0003E001: ("IOP_LOGINFO_CODE_FWUPLOAD_UNKNOWN_IMAGE_TYPE", "ImageType field contents were invalid"),
0x0003E002: ("IOP_LOGINFO_CODE_FWUPLOAD_WRONG_IMAGE_SIZE", "ImageSize field in TCSGE was bad/offset in MfgPg 4 was wrong"),
0x0003E003: ("IOP_LOGINFO_CODE_FWUPLOAD_ENTIRE_FLASH_UPLOAD_FAILED", "Error occured while attempting to upload the entire flash"),
0x0003E003: ("IOP_LOGINFO_CODE_FWUPLOAD_ENTIRE_FLASH_UPLOAD_FAILED", "Error occurred while attempting to upload the entire flash"),
0x0003E004: ("IOP_LOGINFO_CODE_FWUPLOAD_REGION_UPLOAD_FAILED", "Error occured while attempting to upload single flash region"),
0x0003E004: ("IOP_LOGINFO_CODE_FWUPLOAD_REGION_UPLOAD_FAILED", "Error occurred while attempting to upload single flash region"),
0x0003E005: ("IOP_LOGINFO_CODE_FWUPLOAD_DMA_FAILURE", "Problem occured while DMAing FW to host memory"),
0x0003E005: ("IOP_LOGINFO_CODE_FWUPLOAD_DMA_FAILURE", "Problem occurred while DMAing FW to host memory"),
0x00040000: ("IOP_LOGINFO_CODE_DIAG_MSG_ERROR", "Error handling diag msg - or'd with diag status"),
0x00050000: ("IOP_LOGINFO_CODE_TASK_TERMINATED", ""),
0x00060001: ("IOP_LOGINFO_CODE_ENCL_MGMT_READ_ACTION_ERR0R", "Read Action not supported for SEP msg"),
0x00060002: ("IOP_LOGINFO_CODE_ENCL_MGMT_INVALID_BUS_ID_ERR0R", "Invalid Bus/ID in SEP msg"),
0x00070001: ("IOP_LOGINFO_CODE_TARGET_ASSIST_TERMINATED", ""),
0x00070002: ("IOP_LOGINFO_CODE_TARGET_STATUS_SEND_TERMINATED", ""),
0x00070003: ("IOP_LOGINFO_CODE_TARGET_MODE_ABORT_ALL_IO", ""),
0x00070004: ("IOP_LOGINFO_CODE_TARGET_MODE_ABORT_EXACT_IO", ""),
0x00070005: ("IOP_LOGINFO_CODE_TARGET_MODE_ABORT_EXACT_IO_REQ", ""),
0x00080000: ("IOP_LOGINFO_CODE_LOG_TIMESTAMP_EVENT", ""),
}

ir_code = {
0x00010000: ("IR_LOGINFO_RAID_ACTION_ERROR", ""),
0x00010001: ("IR_LOGINFO_VOLUME_CREATE_INVALID_LENGTH", ""),
0x00010002: ("IR_LOGINFO_VOLUME_CREATE_DUPLICATE", ""),
0x00010003: ("IR_LOGINFO_VOLUME_CREATE_NO_SLOTS", ""),
0x00010004: ("IR_LOGINFO_VOLUME_CREATE_DMA_ERROR", ""),
0x00010005: ("IR_LOGINFO_VOLUME_CREATE_INVALID_VOLUME_TYPE", ""),
0x00010006: ("IR_LOGINFO_VOLUME_MFG_PAGE4_ERROR", ""),
0x00010007: ("IR_LOGINFO_VOLUME_INTERNAL_CONFIG_STRUCTURE_ERROR", ""),
0x00010010: ("IR_LOGINFO_VOLUME_ACTIVATING_AN_ACTIVE_VOLUME", ""),
0x00010011: ("IR_LOGINFO_VOLUME_ACTIVATING_INVALID_VOLUME_TYPE", ""),
0x00010012: ("IR_LOGINFO_VOLUME_ACTIVATING_TOO_MANY_VOLUMES", ""),
0x00010013: ("IR_LOGINFO_VOLUME_ACTIVATING_VOLUME_ID_IN_USE", ""),
0x00010014: ("IR_LOGINFO_VOLUME_ACTIVATE_VOLUME_FAILED", ""),
0x00010015: ("IR_LOGINFO_VOLUME_ACTIVATING_IMPORT_VOLUME_FAILED", ""),
0x00010016: ("IR_LOGINFO_VOLUME_ACTIVATING_TOO_MANY_PHYS_DISKS", ""),
0x00010020: ("IR_LOGINFO_PHYSDISK_CREATE_TOO_MANY_DISKS", ""),
0x00010021: ("IR_LOGINFO_PHYSDISK_CREATE_INVALID_LENGTH", ""),
0x00010022: ("IR_LOGINFO_PHYSDISK_CREATE_DMA_ERROR", ""),
0x00010023: ("IR_LOGINFO_PHYSDISK_CREATE_BUS_TID_INVALID", ""),
0x00010024: ("IR_LOGINFO_PHYSDISK_CREATE_CONFIG_PAGE_ERROR", ""),
0x00010030: ("IR_LOGINFO_COMPAT_ERROR_RAID_DISABLED", ""),
0x00010031: ("IR_LOGINFO_COMPAT_ERROR_INQUIRY_FAILED", ""),
0x00010032: ("IR_LOGINFO_COMPAT_ERROR_NOT_DIRECT_ACCESS", ""),
0x00010033: ("IR_LOGINFO_COMPAT_ERROR_REMOVABLE_FOUND", ""),
0x00010034: ("IR_LOGINFO_COMPAT_ERROR_NEED_SCSI_2_OR_HIGHER", ""),
0x00010035: ("IR_LOGINFO_COMPAT_ERROR_SATA_48BIT_LBA_NOT_SUPPORTED", ""),
0x00010036: ("IR_LOGINFO_COMPAT_ERROR_DEVICE_NOT_512_BYTE_BLOCK", ""),
0x00010037: ("IR_LOGINFO_COMPAT_ERROR_VOLUME_TYPE_CHECK_FAILED", ""),
0x00010038: ("IR_LOGINFO_COMPAT_ERROR_UNSUPPORTED_VOLUME_TYPE", ""),
0x00010039: ("IR_LOGINFO_COMPAT_ERROR_DISK_TOO_SMALL", ""),
0x0001003A: ("IR_LOGINFO_COMPAT_ERROR_PHYS_DISK_NOT_FOUND", ""),
0x0001003B: ("IR_LOGINFO_COMPAT_ERROR_MEMBERSHIP_COUNT", ""),
0x0001003C: ("IR_LOGINFO_COMPAT_ERROR_NON_64K_STRIPE_SIZE", ""),
0x0001003D: ("IR_LOGINFO_COMPAT_ERROR_IME_VOL_NOT_CURRENTLY_SUPPORTED", ""),
0x00010050: ("IR_LOGINFO_DEV_FW_UPDATE_ERR_DFU_IN_PROGRESS", ""),
0x00010051: ("IR_LOGINFO_DEV_FW_UPDATE_ERR_DEVICE_IN_INVALID_STATE", ""),
0x00010052: ("IR_LOGINFO_DEV_FW_UPDATE_ERR_INVALID_TIMEOUT", ""),
0x00010053: ("IR_LOGINFO_DEV_FW_UPDATE_ERR_NO_TIMERS", ""),
0x00010054: ("IR_LOGINFO_DEV_FW_UPDATE_ERR_READING_CFG_PAGE", ""),
0x00010055: ("IR_LOGINFO_DEV_FW_UPDATE_ERR_PORT_IO_TIMEOUTS_REQUIRED", ""),
0x00010056: ("IR_LOGINFO_DEV_FW_UPDATE_ERR_ALLOC_CFG_PAGE", ""),
0x00020000: ("IR_LOGINFO_CODE_UNUSED2", ""),
}

pl_code = {
0x00000001: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_NO_DEST_TIME_OUT", ""),
0x00000002: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_PATHWAY_BLOCKED", ""),
0x00000003: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RES_CONTINUE0", ""),
0x00000004: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RES_CONTINUE1", ""),
0x00000005: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RES_INITIALIZE0", ""),
0x00000006: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RES_INITIALIZE1", ""),
0x00000007: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RES_STOP0", ""),
0x00000008: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RES_STOP1", ""),
0x00000009: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RETRY", ""),
0x0000000A: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_BREAK", ""),
0x0000000B: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_UNUSED_0B", ""),
0x0000000C: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_OPEN_TIMEOUT_EXP", ""),
0x0000000D: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_UNUSED_0D", ""),
0x0000000E: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_DVTBLE_ACCSS_FAIL", ""),
0x00000011: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_BAD_DEST", ""),
0x00000012: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RATE_NOT_SUPP", ""),
0x00000013: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_PROT_NOT_SUPP", ""),
0x00000014: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RESERVED_ABANDON0", ""),
0x00000015: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RESERVED_ABANDON1", ""),
0x00000016: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RESERVED_ABANDON2", ""),
0x00000017: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_RESERVED_ABANDON3", ""),
0x00000018: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_STP_RESOURCES_BSY", ""),
0x00000019: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_WRONG_DESTINATION", ""),
0x0000001B: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_PATH_BLOCKED", "Retry Timeout"),
0x0000001C: ("PL_LOGINFO_SUB_CODE_OPEN_FAIL_AWT_MAXED", "Retry Timeout"),
0x00000100: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE", ""),
0x00000101: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_NO_DEST_TIMEOUT", ""),
0x00000102: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_SATA_NEG_RATE_2HI", ""),
0x00000103: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_RATE_NOT_SUPPORTED", ""),
0x00000104: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_BREAK", ""),
0x00000114: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_ABANDON0", "Open Reject (Zone Violation) - available on SAS-2 devices"),
0x00000114: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_ZONE_VIOLATION", ""),
0x00000115: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_ABANDON1", ""),
0x00000116: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_ABANDON2", ""),
0x00000117: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_ABANDON3", ""),
0x0000011A: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_ORR_TIMEOUT", "Open Reject (Retry) Timeout"),
0x0000011B: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_PATH_BLOCKED", ""),
0x0000011C: ("PL_LOGINFO_SUB_CODE_OPEN_FAILURE_AWT_MAXED", "Arbitration Wait Timer Maxed"),
0x00000120: ("PL_LOGINFO_SUB_CODE_TARGET_BUS_RESET", ""),
0x00000130: ("PL_LOGINFO_SUB_CODE_TRANSPORT_LAYER", "Leave lower nibble (1-f) reserved."),
0x00000140: ("PL_LOGINFO_SUB_CODE_PORT_LAYER", "Leave lower nibble (1-f) reserved."),
0x00000200: ("PL_LOGINFO_SUB_CODE_INVALID_SGL", ""),
0x00000300: ("PL_LOGINFO_SUB_CODE_WRONG_REL_OFF_OR_FRAME_LENGTH", ""),
0x00000400: ("PL_LOGINFO_SUB_CODE_FRAME_XFER_ERROR", ""),
0x00000400: ("PL_LOGINFO_SUB_CODE_FRAME_XFER_ERROR", "Bits 0-3 encode Transport Status Register (offset 0x08)"),
0x00000500: ("PL_LOGINFO_SUB_CODE_TX_FM_CONNECTED_LOW", ""),
0x00000600: ("PL_LOGINFO_SUB_CODE_SATA_NON_NCQ_RW_ERR_BIT_SET", ""),
0x00000700: ("PL_LOGINFO_SUB_CODE_SATA_READ_LOG_RECEIVE_DATA_ERR", ""),
0x00000800: ("PL_LOGINFO_SUB_CODE_SATA_NCQ_FAIL_ALL_CMDS_AFTR_ERR", ""),
0x00000900: ("PL_LOGINFO_SUB_CODE_SATA_ERR_IN_RCV_SET_DEV_BIT_FIS", ""),
0x00000A00: ("PL_LOGINFO_SUB_CODE_RX_FM_INVALID_MESSAGE", ""),
0x00000B00: ("PL_LOGINFO_SUB_CODE_RX_CTX_MESSAGE_VALID_ERROR", ""),
0x00000C00: ("PL_LOGINFO_SUB_CODE_RX_FM_CURRENT_FRAME_ERROR", ""),
0x00000D00: ("PL_LOGINFO_SUB_CODE_SATA_LINK_DOWN", ""),
0x00000E00: ("PL_LOGINFO_SUB_CODE_DISCOVERY_SATA_INIT_W_IOS", ""),
0x00000E01: ("PL_LOGINFO_SUB_CODE_DISCOVERY_REMOTE_SEP_RESET", ""),
0x00000F00: ("PL_LOGINFO_SUB_CODE_SECOND_OPEN", ""),
0x00001000: ("PL_LOGINFO_SUB_CODE_DSCVRY_SATA_INIT_TIMEOUT", ""),
0x00002000: ("PL_LOGINFO_SUB_CODE_BREAK_ON_SATA_CONNECTION", ""),
0x00003000: ("PL_LOGINFO_SUB_CODE_BREAK_ON_STUCK_LINK", ""),
0x00004000: ("PL_LOGINFO_SUB_CODE_BREAK_ON_STUCK_LINK_AIP", ""),
0x00005000: ("PL_LOGINFO_SUB_CODE_BREAK_ON_INCOMPLETE_BREAK_RCVD", ""),
0x00010000: ("PL_LOGINFO_CODE_OPEN_FAILURE", "see SUB_CODE_OPEN_FAIL_ below"),
0x00020000: ("PL_LOGINFO_CODE_INVALID_SGL", ""),
0x00030000: ("PL_LOGINFO_CODE_WRONG_REL_OFF_OR_FRAME_LENGTH", ""),
0x00040000: ("PL_LOGINFO_CODE_FRAME_XFER_ERROR", ""),
0x00050000: ("PL_LOGINFO_CODE_TX_FM_CONNECTED_LOW", ""),
0x00060000: ("PL_LOGINFO_CODE_SATA_NON_NCQ_RW_ERR_BIT_SET", ""),
0x00070000: ("PL_LOGINFO_CODE_SATA_READ_LOG_RECEIVE_DATA_ERR", ""),
0x00080000: ("PL_LOGINFO_CODE_SATA_NCQ_FAIL_ALL_CMDS_AFTR_ERR", ""),
0x00090000: ("PL_LOGINFO_CODE_SATA_ERR_IN_RCV_SET_DEV_BIT_FIS", ""),
0x000A0000: ("PL_LOGINFO_CODE_RX_FM_INVALID_MESSAGE", ""),
0x000B0000: ("PL_LOGINFO_CODE_RX_CTX_MESSAGE_VALID_ERROR", ""),
0x000C0000: ("PL_LOGINFO_CODE_RX_FM_CURRENT_FRAME_ERROR", ""),
0x000D0000: ("PL_LOGINFO_CODE_SATA_LINK_DOWN", ""),
0x000E0000: ("PL_LOGINFO_CODE_DISCOVERY_SATA_INIT_W_IOS", ""),
0x000F0000: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE", ""),
0x000F0001: ("PL_LOGINFO_CODE_CONFIG_PL_NOT_INITIALIZED", "PL not yet initialized, can't do config page req."),
0x000F0100: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE_PT", "Invalid Page Type"),
0x000F0200: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE_NUM_PHYS", "Invalid Number of Phys"),
0x000F0300: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE_NOT_IMP", "Case Not Handled"),
0x000F0400: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE_NO_DEV", "No Device Found"),
0x000F0500: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE_FORM", "Invalid FORM"),
0x000F0600: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE_PHY", "Invalid Phy"),
0x000F0700: ("PL_LOGINFO_CODE_CONFIG_INVALID_PAGE_NO_OWNER", "No Owner Found"),
0x00100000: ("PL_LOGINFO_CODE_DSCVRY_SATA_INIT_TIMEOUT", ""),
0x00110000: ("PL_LOGINFO_CODE_RESET", "See Sub-Codes below (PL_LOGINFO_SUB_CODE)"),
0x00120000: ("PL_LOGINFO_CODE_ABORT", "See Sub-Codes below (PL_LOGINFO_SUB_CODE)"),
0x00130000: ("PL_LOGINFO_CODE_IO_NOT_YET_EXECUTED", ""),
0x00140000: ("PL_LOGINFO_CODE_IO_EXECUTED", ""),
0x00150000: ("PL_LOGINFO_CODE_PERS_RESV_OUT_NOT_AFFIL_OWNER", ""),
0x00160000: ("PL_LOGINFO_CODE_OPEN_TXDMA_ABORT", ""),
0x00170000: ("PL_LOGINFO_CODE_IO_DEVICE_MISSING_DELAY_RETRY", ""),
0x00180000: ("PL_LOGINFO_CODE_IO_CANCELLED_DUE_TO_R_ERR", ""),
0x00200000: ("PL_LOGINFO_CODE_ENCL_MGMT_SMP_FRAME_FAILURE", "Can't get SMP Frame"),
0x00200010: ("PL_LOGINFO_CODE_ENCL_MGMT_SMP_READ_ERROR", "Error occured on SMP Read"),
0x00200010: ("PL_LOGINFO_CODE_ENCL_MGMT_SMP_READ_ERROR", "Error occurred on SMP Read"),
0x00200020: ("PL_LOGINFO_CODE_ENCL_MGMT_SMP_WRITE_ERROR", "Error occured on SMP Write"),
0x00200020: ("PL_LOGINFO_CODE_ENCL_MGMT_SMP_WRITE_ERROR", "Error occurred on SMP Write"),
0x00200040: ("PL_LOGINFO_CODE_ENCL_MGMT_NOT_SUPPORTED_ON_ENCL", "Encl Mgmt services not available for this WWID"),
0x00200050: ("PL_LOGINFO_CODE_ENCL_MGMT_ADDR_MODE_NOT_SUPPORTED", "Address Mode not suppored"),
0x00200060: ("PL_LOGINFO_CODE_ENCL_MGMT_BAD_SLOT_NUM", "Invalid Slot Number in SEP Msg"),
0x00200070: ("PL_LOGINFO_CODE_ENCL_MGMT_SGPIO_NOT_PRESENT", "SGPIO not present/enabled"),
0x00200080: ("PL_LOGINFO_CODE_ENCL_MGMT_GPIO_NOT_CONFIGURED", "GPIO not configured"),
0x00200090: ("PL_LOGINFO_CODE_ENCL_MGMT_GPIO_FRAME_ERROR", "GPIO can't allocate a frame"),
0x002000A0: ("PL_LOGINFO_CODE_ENCL_MGMT_GPIO_CONFIG_PAGE_ERROR", "GPIO failed config page request"),
0x002000B0: ("PL_LOGINFO_CODE_ENCL_MGMT_SES_FRAME_ALLOC_ERROR", "Can't get frame for SES command"),
0x002000C0: ("PL_LOGINFO_CODE_ENCL_MGMT_SES_IO_ERROR", "I/O execution error"),
0x002000D0: ("PL_LOGINFO_CODE_ENCL_MGMT_SES_RETRIES_EXHAUSTED", "SEP I/O retries exhausted"),
0x002000E0: ("PL_LOGINFO_CODE_ENCL_MGMT_SMP_FRAME_ALLOC_ERROR", "Can't get frame for SMP command"),
0x00200100: ("PL_LOGINFO_DA_SEP_NOT_PRESENT", "SEP not present when msg received"),
0x00200101: ("PL_LOGINFO_DA_SEP_SINGLE_THREAD_ERROR", "Can only accept 1 msg at a time"),
0x00200102: ("PL_LOGINFO_DA_SEP_ISTWI_INTR_IN_IDLE_STATE", "ISTWI interrupt recvd. while IDLE"),
0x00200103: ("PL_LOGINFO_DA_SEP_RECEIVED_NACK_FROM_SLAVE", "SEP NACK'd, it is busy"),
0x00200104: ("PL_LOGINFO_DA_SEP_DID_NOT_RECEIVE_ACK", "SEP didn't rcv. ACK (Last Rcvd Bit = 1)"),
0x00200105: ("PL_LOGINFO_DA_SEP_BAD_STATUS_HDR_CHKSUM", "SEP stopped or sent bad chksum in Hdr"),
0x00200106: ("PL_LOGINFO_DA_SEP_STOP_ON_DATA", "SEP stopped while transfering data"),
0x00200106: ("PL_LOGINFO_DA_SEP_STOP_ON_DATA", "SEP stopped while transferring data"),
0x00200107: ("PL_LOGINFO_DA_SEP_STOP_ON_SENSE_DATA", "SEP stopped while transfering sense data"),
0x00200107: ("PL_LOGINFO_DA_SEP_STOP_ON_SENSE_DATA", "SEP stopped while transferring sense data"),
0x00200108: ("PL_LOGINFO_DA_SEP_UNSUPPORTED_SCSI_STATUS_1", "SEP returned unknown scsi status"),
0x00200109: ("PL_LOGINFO_DA_SEP_UNSUPPORTED_SCSI_STATUS_2", "SEP returned unknown scsi status"),
0x0020010A: ("PL_LOGINFO_DA_SEP_CHKSUM_ERROR_AFTER_STOP", "SEP returned bad chksum after STOP"),
0x0020010B: ("PL_LOGINFO_DA_SEP_CHKSUM_ERROR_AFTER_STOP_GETDATA", "SEP returned bad chksum after STOP while gettin data"),
0x0020010C: ("PL_LOGINFO_DA_SEP_UNSUPPORTED_COMMAND", "SEP doesn't support CDB opcode f/w location 1"),
0x0020010D: ("PL_LOGINFO_DA_SEP_UNSUPPORTED_COMMAND_2", "SEP doesn't support CDB opcode f/w location 2"),
0x0020010E: ("PL_LOGINFO_DA_SEP_UNSUPPORTED_COMMAND_3", "SEP doesn't support CDB opcode f/w location 3"),
}

types = {
        0: ('NONE', None),
        1: ('SCSI', None),
        2: ('FC', None),
        3: ('SAS', None),
        4: ('iSCSI', None),
}

origins = {
        0: ('IOP', iop_code),
        1: ('PL', pl_code),
        2: ('IR', ir_code),
}

def _parse_loginfo(name, d, val):
    out = d.get(val, None)
    if out is not None:
        return out
    return ('Unknown %s (%d / %xh)' % (name, val, val), None)

def parse_loginfo_type(val):
    return _parse_loginfo('type', types, val)[0]
def parse_loginfo_origin(val):
    return _parse_loginfo('origin', origins, val)[0]
def parse_loginfo_code(origin, val):
    code_table = _parse_loginfo('origin', origins, origin)[1]
    if code_table is None:
        return 'Unknown code for unknown origin'
    return _parse_loginfo('code', code_table, val<<16)[0]
def parse_loginfo_spec(origin, code, val):
    code_table = _parse_loginfo('origin', origins, origin)[1]
    if code_table is None:
        return 'Unknown code for unknown origin'
    name, desc = _parse_loginfo('spec', code_table, (code<<16) | val)
    if desc is None:
        return name
    else:
        return name + ' ' + desc

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print 'Must provide a loginfo number to decode, as in:'
        print '%s 0x31120000' % sys.argv[0]
        sys.exit(1)
    
    try:
        val = int(sys.argv[1], 0)
    except ValueError:
        print 'Failure to parse the value "%s", it must be a number' % sys.argv[1]
        sys.exit(1)

    info = decode_lsi_loginfo(val)
    def line_out(hdr, val, parse_func):
        print '%s:\t %d / %xh =\t %s' % (hdr, val, val, parse_func(val))
    line_out('Type', info[0], parse_loginfo_type)
    line_out('Origin', info[1], parse_loginfo_origin)
    line_out('Code', info[2], lambda x: apply(parse_loginfo_code, [info[1], x]))
    line_out('Spec', info[3], lambda x: apply(parse_loginfo_spec, [info[1], info[2], x]))
